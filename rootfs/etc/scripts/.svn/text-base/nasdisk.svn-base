#!/bin/sh

. /etc/scripts/include

BASENAME=`basename $0`

usage(){
	echo "error: "$1
	echo "Usage $BASENAME:"
	echo "       -l: level for raid: 0 1 4 5 6 10 linear"
	echo "       -s: hot spare device"
	echo "       -n: device number"
	echo "       -e: raid encrypt password"
	echo "       -d: device list"
	echo "       Remark: multi args must covered with ''"
	exit 1
}

while getopts "l:s:n:e:d:" opt
do
	case $opt in
		l) RAID_LEVEL=$OPTARG ;;
		s) RAID_SPARE=$OPTARG ;;
		n) RAID_COUNT=$OPTARG ;;
		e) RAID_CRYPT=$OPTARG ;;
		d) DISK_USEAS=$OPTARG ;;
		?) usage ;;
	esac
done

RAID4USER=/dev/md/userspace
RAID4STOR=/dev/md/storspace
USERLIST=""
STORLIST=""
ERROROUT="/var/log/"$BASENAME".log"

#check parameter
[ -z $RAID_LEVEL ] && usage "level is null"
[ -z $DISK_USEAS ] && usage "device list is null"
[ -z $RAID_COUNT ] && usage "device number is null"

#clean error log
echo > $ERROROUT

lockscript `basename $0`

#check disk is in used and parted clean

for dev in $DISK_USEAS
do
	checkused $BASENAME $dev
	if [ $? -eq 1 ]; then
		freescript `basename $0`
		exit 1
	else
		#clean all gpt partion
		parted -s $dev mktable gpt >> $ERROROUT 2>&1
		if [ $? -ne 0 ]; then
			setlog $BASENAME "clean partion on $dev failed" 1
			freescript `basename $0`
			exit 1
		fi

		#build userspace
		parted -s $dev mkpart "primary ext2 0 2048 i" >> $ERROROUT 2>&1
		if [ $? -ne 0 ]; then
			setlog $BASENAME "build partion on $dev failed" 1
			freescript `basename $0`
			exit 1
		fi
		
		#build storspace
		parted -s $dev mkpart "primary ext2 2048 -1 i" >> $ERROROUT 2>&1
		if [ $? -ne 0 ]; then
			setlog $BASENAME "build partion on $dev failed" 1
			freescript `basename $0`
			exit 1
		fi

		USERLIST=$USERLIST" "$dev"1"
		STORLIST=$STORLIST" "$dev"2"
	fi
done

#make raid1 for save user config and database
#check if userspace already has

#build userspace

for SEQ in `seq 0 28`
do
	RAID4STOR="$RAID4STOR""$SEQ"
	if [ -b "$RAIDNAME" ]; then
		continue
	else	
		break;
	fi
done

echo $USERLIST
echo $STORLIST

echo Y | mdadm -C $RAID4USER -l1 -c128 \
-n $RAID_COUNT \
--bitmap=internal --name=`basename $RAID4USER` \
--force $USERLIST >> $ERROROUT 2>&1

if [ $? -ne 0 ]; then
	setlog $BASENAME "make userspace failed" 1
	freescript `basename $0`
	exit 1
fi

#wait for userspace
mdadm --misc -W $RAID4USER

#build storspace
echo Y | mdadm -C $RAID4STOR -l $RAID_LEVEL -c128 \
-n $RAID_COUNT \
--name=`basename $RAID4STOR` \
--force $STORLIST >> $ERROROUT 2>&1

if [ $? -ne 0 ]; then
	setlog $BASENAME "make storspace failed" 1
	freescript `basename $0`
	exit 1
fi

mdadm --misc -W $RAID4STOR

freescript `basename $0`
